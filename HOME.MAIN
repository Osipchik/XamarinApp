using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Labs.Helpers;
using Labs.MainPages;
using Labs.Models;
using Labs.ViewModels;
using Lottie.Forms;
using Xamarin.Forms;
using Xamarin.Forms.Xaml;

namespace Labs.Views
{
    [XamlCompilation(XamlCompilationOptions.Compile)]
    public partial class HomePage
    {
        private readonly HomeViewModel _homeViewModel;

        [Obsolete]
        public HomePage()
        {
            InitializeComponent();
            _homeViewModel = new HomeViewModel(searchBar, GridButtons, LabelName, LabelSubject, LabelDate);
            ListUploadAsync();
            Subscribe();
        }

        private void ListUploadAsync() => listView.ItemsSource = _homeViewModel.GetModels.GetDirectoryInfo();
        
        private void Subscribe()
        {
            MessagingCenter.Subscribe<Page>(
                this, Constants.HomeListUpload, (sender) => { ListUploadAsync(); });
        }

        private async void ListView_OnItemTapped(object sender, ItemTappedEventArgs e) =>
            await Navigation.PushAsync(new StartTestPage(_homeViewModel.GetModels.GetElementPath(e.ItemIndex)));
        
        private void ListView_OnItemSelected(object sender, SelectedItemChangedEventArgs e) =>
            ((ListView) sender).SelectedItem = null;
        
        private void SearchBar_OnTextChanged(object sender, TextChangedEventArgs e) =>
            listView.ItemsSource = _homeViewModel.Search(e.NewTextValue);


    }
}
